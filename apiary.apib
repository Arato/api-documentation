FORMAT: 1A
host: https://arato-api.herokuapp.com

# arato
Notes API is a *short texts saving* service similar to its physical paper presence on your table.


# Group Authentication
Notes related resources of the **Authentication API**

## Credentials

| Field    | Type   | HTML Type | Description                   |
|----------|--------|-----------|-------------------------------|
| email    | String | email     | The email address of the user |
| password | String | text      | The corresponding password    |

## login [/login]
### login [POST]
+ Request (application/json)

        {
            "email" : "email@example.com",
            "password" : "azerty"
        }

+ Response 200 (application/json)
    
        {
            "data" : {
            }
        }

+ Response 401

## logout [/logout]
### logout [POST]
+ Response 204


# Group alerts
To access to alerts, you have to be authenticated (unless for the "retrieve all alerts" endpoint).

## Model

Below are all properties related to an Alert.

| Field        | Required for creation | Read only | type   | Description                                     |
|--------------|:---------------------:|:---------:|--------|-------------------------------------------------|
| `id`         |           ✔           |           | int    | The id in the database                          |
| `title`      |           ✔           |           | String | The title of the Alert                          |
| `price`      |           ✔           |           | int    | The price of the Alert                          |
| `content`    |                       |           | String | A more complete description of the Alert        |
| `user_id`    |           ✔           |     ✔     | int    | The id of the User who created the Alert        |
| `created_at` |                       |     ✔     | Date   | a ISO8601 formatted date.                       |
| `updated_at` |                       |     ✔     | Date   | a ISO8601 formatted date. Updated on each save. |


## api/v1/alerts [/api/v1/alerts{?page,limit,userId,sort,order}]

### Retrieve all alerts [GET]
+ Parameters
    + page (optional, number) ... The page
    + userId (optional, string) ... A user id to filter from
    + limit = `20` (optional, number) ... The number of elements per page. Maximum `50`.
    + sort  = `id` (optional, string) ... The field to sort from.
        + Values
            + `id`
            + `created_at`
            + `price`
    + order = `desc`(optional, string) ... The order of sorting.
        + Values
            + `asc`
            + `desc`

+ Response 200 (application/json)

        {
            "alerts" : [
                {  
                    "id" : 2,
                    "title" : "Title 2",
                    "price" : 10
                },
                {
                    "id" : 1,
                    "title" : "Title 1",
                    "price" : 20,
                    "content" : "Content for alert 1"
                }
            ],
            "paginate" : {
                "total_count" : 2,
                "total_pages" : 1,
                "current_page" : 1,
                "limit" : 20
            }
        }

+ Response 401

### Create a new alert [POST]

+ Request (application/json)

        {
            "title" : "My title",
            "price" : 10,
            "content" : "Hello"
        }


+ Response 201 (application/json)

        {
            "id" : 3, 
            "title" : "My title",
            "price" : 10,
            "content" : "Hello"
        }


## api/v1/alerts/{id} [/api/v1/alerts/{id}]
+ Parameters
    + id (required, number) ... The id of the Alert.
    
### Show an alert [GET]

+ Response 200 (application/json)
    
        {
            "alerts" : {  
                "id" : 2,
                "title" : "Title 2",
                "price" : 10
            }
        }

### Update an alert [PUT]

+ Request (application/json)

        {
            "title" : "My title",
            "price" : "10",
            "content" : "Hello"
        }

+ Response 200 (application/json)

        { "id": 3, "title": "Buy cheese and bread for breakfast." }

### Delete an alert [DELETE]

+ Response 204 (application/json)

+ Response 403 (application/json)

+ Response 404 (application/json)

# Group Users
Notes related resources of the **Users API**