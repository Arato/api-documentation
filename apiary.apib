FORMAT: 1A
host: https://arato-api.herokuapp.com
# arato
Notes API is a *short texts saving* service similar to its physical paper presence on your table.




# Group Authentication
Notes related resources of the **Authentication API**








# Group alerts
Notes related resources of the **Alerts API**

Below are all properties related to an Alert.

| Field        | Required for creation | Read only | type   | Description                                     |
|--------------|:---------------------:|:---------:|--------|-------------------------------------------------|
| `id`         |           ✔           |           | int    | The id in the database                          |
| `title`      |           ✔           |           | String | The title of the Alert                          |
| `price`      |           ✔           |           | int    | The price of the Alert                          |
| `content`    |                       |           | String | A more complete description of the Alert        |
| `user_id`    |           ✔           |     ✔     | int    | The id of the User who created the Alert        |
| `created_at` |                       |     ✔     | Date   | a ISO8601 formatted date.                       |
| `updated_at` |                       |     ✔     | Date   | a ISO8601 formatted date. Updated on each save. |

## GET /api/v1/alerts
The GET endpoint retrieves all alerts. you can add query parameters to the endpoint to filter your data.

| Field    | type   |default | Description                                                           |
|----------|--------|--------|-----------------------------------------------------------------------|
| `page`   | int    | 1      | The page.                                                             |
| `limit`  | String | 20     | The number of elements per page. Maximum `50`.                        |
| `userId` | int    |        | A user id to filter from.                                             |
| `sort`   | String | `id`   | The field to sort from. Available values : `id`,`created_at`,`price`. |
| `order`  | int    | `desc` | The order of sorting. Available values : `asc`, `desc`.               |

+ Response 200 (application/json)

        {
            "users":[{
                    "id":1,
                    "email":"email@example.com",
                    "sequence_number":0
                }
            ],
            "paginate":{
                "total_count":1,
                "total_pages":1,
                "current_page":1,
                "limit":20
            }
        }




+ Response 401


## POST /api/v1/alerts
The POST endpoint creates a new alert. Below are all properties related to an Alert.

+ Request (application/json)

        {
            "title": "My title",
            "price" : "10",
            "content" : "Hello"
        }




+ Response 201 (application/json)

        { "id": 3, "title": "Buy cheese and bread for breakfast." }




# Group Users
Notes related resources of the **Users API**

## Users Collection [/api/v1/users{?since}]
### List all Users [GET]
+ Parameters
    + since (optional, string) ... dfdfdfd dfsdf df sdf
+ Response 200 (application/json)




        {
            "users":[{
                    "id":1,
                    "email":"email@example.com",
                    "sequence_number":0
                }
            ],
            "paginate":{
                "total_count":1,
                "total_pages":1,
                "current_page":1,
                "limit":20
            }
        }




+ Response 403




### Create a User [POST]
+ Request (application/json)




        {
            "email": "email@example.com",
            "password" : "password",
            "password_confirmation" : "password"
        }




+ Response 201 (application/json)




        { "id": 3, "title": "Buy cheese and bread for breakfast." }




## Note [/notes/{id}]
A single Note object with all its details




+ Parameters
    + id (required, number, `1`) ... Numeric `id` of the Note to perform action with. Has example value.




### Retrieve a Note [GET]
+ Response 200 (application/json)




    + Header




            X-My-Header: The Value




    + Body




            { "id": 2, "title": "Pick-up posters from post-office" }




### Remove a Note [DELETE]
+ Response 204
